---
name: Run tests

on:  # yamllint disable-line rule:truthy
  workflow_call:
    inputs:
      codecov:
        description: 'run codecov action after testing'
        default: false
        required: false
        type: boolean
      matrix-filter:
        description: 'jq filter string indicating which configuration(s)
          should be included'
        default: '.'
        required: false
        type: string
      repository:
        description: 'repository to test if different from current'
        default: ''
        required: false
        type: string
      setup-repository:
        description: 'repository used during job setup'
        default: 'ros-infrastructure/ci'
        required: false
        type: string
    secrets:
      CODECOV_TOKEN:
        description: 'token to use when running codecov action after testing'
        required: false

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      strategy: ${{ steps.load.outputs.strategy }}
    steps:
      - uses: actions/checkout@v4
        with:
          repository: ${{ inputs.setup-repository }}
      - id: load
        run: |
          strategy=$(jq -c -M '${{ inputs.matrix-filter }}' strategy.json)
          echo "strategy=${strategy}" >> $GITHUB_OUTPUT

  pytest:
    needs: [setup]
    strategy: ${{ fromJson(needs.setup.outputs.strategy) }}
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4
        with:
          repository: ${{ inputs.repository }}
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
      - uses: actions/checkout@v4
        with:
          repository: ${{ inputs.setup-repository }}
          path: ./.github-ci-action-repo
      - uses: ./.github-ci-action-repo
      - uses: codecov/codecov-action@v3
        if: ${{ inputs.codecov }}
      - uses: codecov/codecov-action@v4
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        if: ${{ env.CODECOV_TOKEN != '' }}
